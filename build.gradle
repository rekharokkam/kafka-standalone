buildscript {
    ext {
        springboot_version = '3.1.3'
        lombok_version = '1.18.22'
        avro_plugin_version = '1.8.0'
        twitter_dependency_version = '2.2.0'
        elasticsearch_dependency_version = '6.8.13'
        confluentVersion = '7.0.1'

        set('springCloudVersion', "2022.0.4")
    }

    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version "${springboot_version}"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.github.davidmc24.gradle.plugin.avro' version "${avro_plugin_version}" apply false
}


allprojects {

    group = 'com.learning.spring.kafka'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
        maven {
            url "https://packages.confluent.io/maven/"
//            allowInsecureProtocol = true
        }
    }
}

configurations {
    all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'org.apache.logging.log4j') {
                    details.useVersion '2.17.1'
                    details.because 'fixes critical security vulnerability, see https://www.randori.com/blog/cve-2021-44228/'
                }
            }
        }
    }
}


dependencies {
    implementation 'org.springframework.kafka:spring-kafka'
    implementation ("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation ("org.springframework.boot:spring-boot-starter-web")
//    implementation 'org.apache.kafka:kafka-streams'

    implementation "com.twitter:hbc-core:${twitter_dependency_version}" //twitter dependency
    implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearch_dependency_version}" //elastic search dependency
    implementation "org.elasticsearch:elasticsearch:${elasticsearch_dependency_version}"
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation "io.confluent:kafka-avro-serializer:$confluentVersion"

    compileOnly "org.projectlombok:lombok:${lombok_version}"

    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springboot_version}"
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


test {
    useJUnitPlatform()
}
